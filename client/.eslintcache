[{"E:\\GDesign\\program\\client\\src\\components\\ScatterPlot.tsx":"1","E:\\GDesign\\program\\client\\src\\App.tsx":"2","E:\\GDesign\\program\\client\\src\\index.tsx":"3","E:\\GDesign\\program\\client\\src\\components\\ForceCompute.tsx":"4","E:\\GDesign\\program\\client\\src\\components\\NodeLink.tsx":"5","E:\\GDesign\\program\\client\\src\\reportWebVitals.ts":"6","E:\\GDesign\\program\\client\\src\\components\\NodeList.tsx":"7","E:\\GDesign\\program\\client\\src\\components\\Info.tsx":"8","E:\\GDesign\\program\\client\\src\\components\\Parallel.tsx":"9","E:\\GDesign\\program\\client\\src\\components\\Table.tsx":"10","E:\\GDesign\\program\\client\\src\\components\\DrawPanel.tsx":"11","E:\\GDesign\\program\\client\\src\\components\\DistributeAttr.tsx":"12","E:\\GDesign\\program\\client\\src\\components\\TargetTree.tsx":"13","E:\\GDesign\\program\\client\\src\\components\\PNodeLink.tsx":"14","E:\\GDesign\\program\\client\\src\\components\\ellipseForce.js":"15","E:\\GDesign\\program\\client\\src\\components\\PTargetTree.tsx":"16","E:\\GDesign\\program\\client\\src\\components\\HistoryRecord.tsx":"17"},{"size":14630,"mtime":1615813313167,"results":"18","hashOfConfig":"19"},{"size":22080,"mtime":1615815914674,"results":"20","hashOfConfig":"19"},{"size":457,"mtime":1611729263800,"results":"21","hashOfConfig":"19"},{"size":2349,"mtime":1615711698198,"results":"22","hashOfConfig":"19"},{"size":6859,"mtime":1615697544628,"results":"23","hashOfConfig":"19"},{"size":425,"mtime":1609982263790,"results":"24","hashOfConfig":"19"},{"size":2794,"mtime":1613826547908,"results":"25","hashOfConfig":"19"},{"size":5018,"mtime":1615719221929,"results":"26","hashOfConfig":"19"},{"size":8117,"mtime":1615810373610,"results":"27","hashOfConfig":"19"},{"size":4058,"mtime":1611406252995,"results":"28","hashOfConfig":"19"},{"size":14548,"mtime":1615800188942,"results":"29","hashOfConfig":"19"},{"size":8768,"mtime":1615721110677,"results":"30","hashOfConfig":"19"},{"size":3184,"mtime":1614588853461,"results":"31","hashOfConfig":"19"},{"size":6058,"mtime":1615720324361,"results":"32","hashOfConfig":"19"},{"size":5702,"mtime":1615529771241,"results":"33","hashOfConfig":"19"},{"size":17031,"mtime":1615801151319,"results":"34","hashOfConfig":"19"},{"size":3591,"mtime":1615814212696,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pde34m",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\GDesign\\program\\client\\src\\components\\ScatterPlot.tsx",[],"E:\\GDesign\\program\\client\\src\\App.tsx",["73"],"E:\\GDesign\\program\\client\\src\\index.tsx",[],["74","75"],"E:\\GDesign\\program\\client\\src\\components\\ForceCompute.tsx",["76"],"E:\\GDesign\\program\\client\\src\\components\\NodeLink.tsx",["77"],"E:\\GDesign\\program\\client\\src\\reportWebVitals.ts",[],["78","79"],"E:\\GDesign\\program\\client\\src\\components\\NodeList.tsx",["80"],"E:\\GDesign\\program\\client\\src\\components\\Info.tsx",["81","82"],"import * as React from 'react';\r\n// import NodeLink from './NodeLink';\r\nimport PNodeLink from './PNodeLink';\r\nimport PTargetTree from './PTargetTree';\r\nimport axios from 'axios';\r\nimport graphURL from '../assets/graph.png';\r\nimport graphSelectURL from '../assets/graph_select.png';\r\nimport tableURL from '../assets/table.png';\r\nimport tableSelectURL from '../assets/table_select.png';\r\nimport historyURl from '../assets/history.png';\r\nimport historySelectURL from '../assets/history_select.png';\r\n\r\n\r\ntype edges = Array<number>;\r\ntype graph = {\r\n    id: number,\r\n    // nodes:Array<number>,\r\n    // edges:Array<edges>,\r\n    [propName: string]: any,\r\n}\r\n\r\ninterface Props {\r\n    graphs: Array<graph>,\r\n    url: string,\r\n    num: number,//匹配数量\r\n    parent: any,\r\n    dimensions: number,\r\n    strWeight: number,\r\n    attrWeight: number,\r\n    attrChecked: attr,\r\n    attrValue: attr,\r\n    dataType: string,\r\n}\r\ntype attr = {\r\n    [propName: string]: any,\r\n}\r\n\r\nclass Info extends React.Component<Props, any>{\r\n    private icons: Array<string> = [graphURL, tableURL, historyURl];\r\n    private selectIcos: Array<string> = [graphSelectURL, tableSelectURL, historySelectURL];\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { selectNum: 0 }\r\n        this.match = this.match.bind(this);\r\n        this.changePage=this.changePage.bind(this);\r\n    }\r\n    match(graph: graph): void {//匹配相似图\r\n        const { url, dimensions, strWeight, attrWeight, attrChecked, attrValue, dataType } = this.props;\r\n        let checkedArr: any = [];\r\n        for (let key in attrChecked) {\r\n            checkedArr.push({ name: key, value: attrChecked[key] })\r\n        }\r\n        axios.post(url + '/matchGraph', { wd: graph, dataType: dataType, num: this.props.num, dimensions: dimensions, strWeight: strWeight, attrWeight: attrWeight, attrChecked: checkedArr, attrValue: attrValue })\r\n            .then(res => {\r\n                this.props.parent.setChoosePoints(res.data.data);\r\n            })\r\n        axios.post(url + '/searchGraphByGraphId', { wd: graph.id, dataType: dataType, dimensions: dimensions, attrWeight: attrWeight, strWeight: strWeight, attrChecked: checkedArr })\r\n            .then(res => {\r\n                // console.log(res.data.data[0]);\r\n                this.props.parent.setCenterPoint(res.data.data[0]);\r\n            })\r\n\r\n    }\r\n    changePage(number:number):void{\r\n        this.setState({selectNum:number});\r\n    }\r\n    render(): React.ReactElement {\r\n        let components:Array<React.ReactElement>=[];\r\n        let elements = this.props.graphs.map((graph: graph, index: number) => {\r\n            let el = null;\r\n            if (this.props.dataType === \"Author\") {\r\n                el = <PNodeLink graph={graph} key={index} />;\r\n            }\r\n            else if (this.props.dataType === \"Family\") {\r\n                el = <PTargetTree graph={graph} key={index} />\r\n            }\r\n            return (\r\n                <div className='infoBox' key={index} style={{ width: \"100%\",height:'100%',float:'left' }}>\r\n\r\n                    <div style={{ height: '100%', width: '100%', float: 'left' }}>\r\n                        {el}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        })\r\n        components.push(elements[0])\r\n        components.push(<p>table</p>)\r\n        components.push(<p>history</p>)\r\n        let iconsEl = this.icons.map((value: string, index: number) => {\r\n            return (\r\n                <div style={{ width: '100%', height: '60px', borderBottom:'1px solid #ccc',cursor:'pointer'}} key={index} >\r\n                    <img src={this.state.selectNum === index ? this.selectIcos[index] : value} width=\"100%\" height=\"100%\" onClick={this.changePage.bind(this,index)} />\r\n                </div>\r\n            )\r\n        })\r\n\r\n        let pageEl=this.icons.map((value:string,index:number)=>{\r\n            let translate=`translate(0,-${this.state.selectNum*100}%)`;\r\n            return(\r\n                <div key={index} style={{ width: \"100%\" ,height:'100%',transform:translate,display:'inline-block',float:'left'}}>\r\n                    {components[index]}\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className='info'>\r\n                {/* <input type=\"button\" value=\"match\" onClick={this.match.bind(this,graph)}></input> */}\r\n                <div className=\"infoName\" style={{\r\n                    height: '100%', width: '50px', fontSize: '0.5rem', float: 'left',\r\n                    overflowX: 'hidden', overflowY: 'auto', backgroundColor: 'rgb(254,254,254)', border: '1px solid #ccc',\r\n                    borderTop: 'none', boxSizing: 'border-box'\r\n                }}>\r\n                    {iconsEl}\r\n                </div>\r\n                <div style={{width: \"calc(100% - 50px)\" ,height:'100%',float:\"left\"}}>\r\n                    {pageEl}\r\n                </div>\r\n            </div>\r\n        )\r\n        //,wordWrap:'break-word',wordBreak:'normal'\r\n    }\r\n}\r\n\r\nexport default Info;","E:\\GDesign\\program\\client\\src\\components\\Parallel.tsx",[],"E:\\GDesign\\program\\client\\src\\components\\Table.tsx",["83"],"E:\\GDesign\\program\\client\\src\\components\\DrawPanel.tsx",[],"E:\\GDesign\\program\\client\\src\\components\\DistributeAttr.tsx",["84"],"E:\\GDesign\\program\\client\\src\\components\\TargetTree.tsx",[],"E:\\GDesign\\program\\client\\src\\components\\PNodeLink.tsx",["85","86"],"E:\\GDesign\\program\\client\\src\\components\\ellipseForce.js",["87","88","89","90","91","92"],"E:\\GDesign\\program\\client\\src\\components\\PTargetTree.tsx",[],"E:\\GDesign\\program\\client\\src\\components\\HistoryRecord.tsx",["93"],{"ruleId":"94","severity":1,"message":"95","line":20,"column":6,"nodeType":"96","messageId":"97","endLine":20,"endColumn":11},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"95","line":6,"column":6,"nodeType":"96","messageId":"97","endLine":6,"endColumn":11},{"ruleId":"94","severity":1,"message":"102","line":131,"column":40,"nodeType":"96","messageId":"97","endLine":131,"endColumn":49},{"ruleId":"98","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"94","severity":1,"message":"105","line":48,"column":15,"nodeType":"96","messageId":"97","endLine":48,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":14,"column":6,"nodeType":"96","messageId":"97","endLine":14,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":93,"column":21,"nodeType":"108","endLine":93,"endColumn":168},{"ruleId":"109","severity":1,"message":"110","line":40,"column":63,"nodeType":"111","messageId":"112","endLine":40,"endColumn":65},{"ruleId":"94","severity":1,"message":"95","line":26,"column":6,"nodeType":"96","messageId":"97","endLine":26,"endColumn":11},{"ruleId":"94","severity":1,"message":"102","line":97,"column":40,"nodeType":"96","messageId":"97","endLine":97,"endColumn":49},{"ruleId":"113","severity":1,"message":"114","line":106,"column":59,"nodeType":"115","messageId":"116","endLine":106,"endColumn":61},{"ruleId":"117","severity":1,"message":"118","line":7,"column":1,"nodeType":"119","endLine":155,"endColumn":2},{"ruleId":"109","severity":1,"message":"120","line":44,"column":17,"nodeType":"111","messageId":"112","endLine":44,"endColumn":19},{"ruleId":"109","severity":1,"message":"120","line":55,"column":22,"nodeType":"111","messageId":"112","endLine":55,"endColumn":24},{"ruleId":"109","severity":1,"message":"120","line":55,"column":37,"nodeType":"111","messageId":"112","endLine":55,"endColumn":39},{"ruleId":"109","severity":1,"message":"120","line":59,"column":29,"nodeType":"111","messageId":"112","endLine":59,"endColumn":31},{"ruleId":"109","severity":1,"message":"120","line":63,"column":29,"nodeType":"111","messageId":"112","endLine":63,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":60,"column":51,"nodeType":"115","messageId":"116","endLine":60,"endColumn":53},"@typescript-eslint/no-unused-vars","'edges' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'focusNode' is assigned a value but never used.",["121"],["122"],"'suffix' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]